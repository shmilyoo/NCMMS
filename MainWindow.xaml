<local:MyWindow xmlns:local="clr-namespace:NCMMS"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:properties="clr-namespace:NCMMS.Properties"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="NCMMS.MainWindow"
        WindowTitle="网络集中监控和管理系统" BtnMaxFlag="True" Style="{StaticResource WindowNoStyle}"  WindowStartupLocation="CenterScreen"  MinHeight="600" MinWidth="800" Height="758" Width="1044" Icon="/NCMMS;component/Images/earth.ico">
    <local:MyWindow.Resources>
        <sys:String x:Key="topo">拓扑图管理</sys:String>
        <sys:String x:Key="trap">TRAP</sys:String>
        <sys:String x:Key="portMonitor">端口监视</sys:String>
        <sys:String x:Key="fiberPowerMonitor">光功率监视</sys:String>
        <sys:String x:Key="peerMap">PeerMap</sys:String>
        <sys:String x:Key="multiPing">MultiPing</sys:String>
        <sys:String x:Key="multiBroadcast">组播测试</sys:String>
        <sys:String x:Key="config">设置</sys:String>
        <sys:String x:Key="help">帮助</sys:String>
        <Style x:Key="bottomButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,1" />
            <Setter Property="Width" Value="60" />
            <Setter Property="Height" Value="60" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="1,1">
                        <GradientStop Color="White" Offset="0" />
                        <GradientStop Color="Black" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <EventSetter Event="Click" Handler="BottomButton_OnClick" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="1,1">
                                            <GradientStop Color="Black" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" To="1.1"
                                                             Duration="0:0:0.1" />
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" To="1.1"
                                                             Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" Duration="0:0:0.1" />
                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                        <Border BorderBrush="Black" CornerRadius="30"  BorderThickness="0.3">
                            <Ellipse Stroke="{TemplateBinding BorderBrush}">
                                <Ellipse.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="White" Offset="1"/>
                                        <GradientStop Color="#FF1F60B8" Offset="0.498"/>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </local:MyWindow.Resources>


    <Grid>
        <Grid.Background>
            <!--<ImageBrush Stretch="UniformToFill" ImageSource="images/background.png" />-->
            <ImageBrush Stretch="UniformToFill" ImageSource="{Binding Path=BackgroundPicUrl,Source={x:Static properties:Settings.Default}}" />
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="100"/>
        </Grid.RowDefinitions>
        <Grid x:Name="bottomGrid" Grid.Row="1" ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="50"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Viewbox Stretch="Fill" Grid.RowSpan="2" Grid.ColumnSpan="11">
                <Grid>
                    <Path Data="M0,100L37,34L979,34L1016,100z" Fill="#FF4D4D4D" Opacity="0.8"/>
                    <Path Data="M22.562,59.2549C165,86.9999,249.443,81.2349,368.083,68.4169C488,55.4609,842,49.9999,979,33.9999L37,33.9999z" Fill="White" Opacity="0.3"/>
                </Grid>
                <!--<ImageBrush ImageSource="/NCMMS;component/Images/glass.png" />使用矢量图，原有废弃-->
            </Viewbox>
            <Button Grid.Column="1" Style="{StaticResource bottomButtonStyle}" Content="{StaticResource topo}"></Button>
            <Button Grid.Column="2" Style="{StaticResource bottomButtonStyle}" Content="{StaticResource trap}"></Button>
            <Button Grid.Column="3" Style="{StaticResource bottomButtonStyle}" Content="{StaticResource portMonitor}"></Button>
            <Button Grid.Column="4" Style="{StaticResource bottomButtonStyle}" Content="{StaticResource fiberPowerMonitor}"></Button>
            <Button Grid.Column="5" Style="{StaticResource bottomButtonStyle}" Content="{StaticResource peerMap}"></Button>
            <Button Grid.Column="6" Style="{StaticResource bottomButtonStyle}" Content="{StaticResource multiPing}"></Button>
            <Button Grid.Column="7" Style="{StaticResource bottomButtonStyle}" Content="{StaticResource multiBroadcast}"></Button>
            <Button Grid.Column="8" Style="{StaticResource bottomButtonStyle}" Content="{StaticResource config}"></Button>
            <Button Grid.Column="9" Style="{StaticResource bottomButtonStyle}" Content="{StaticResource help}"></Button>
        </Grid>
        <Canvas x:Name="canvas" Margin="10" ClipToBounds="True" SizeChanged="canvas_SizeChanged" />

    </Grid>

</local:MyWindow>
